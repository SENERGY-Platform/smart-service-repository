basePath: /
definitions:
  model.ModuleDeleteInfo:
    properties:
      url:
        description: url receives a DELETE request and responds with a status code
          < 300 || code == 404 if ok
        type: string
      user_id:
        type: string
    type: object
  model.Option:
    properties:
      entity_id:
        description: to be used in combination with needs_same_entity_id_in_parameter
        type: string
      kind:
        description: optional helper for frontend to group options
        type: string
      label:
        type: string
      needs_same_entity_id_in_parameter:
        description: optional, frontend should filter this option depending on selection
          in referenced parameter
        type: string
      value: {}
    type: object
  model.SmartServiceDesign:
    properties:
      bpmn_xml:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      svg_xml:
        type: string
      user_id:
        type: string
    type: object
  model.SmartServiceExtendedParameter:
    properties:
      default_value: {}
      description:
        type: string
      id:
        type: string
      label:
        type: string
      multiple:
        description: 'if true: Value = new([]Type); if false: Value = new(Type);'
        type: boolean
      options:
        description: if null -> "free text/number/etc"
        items:
          $ref: '#/definitions/model.Option'
        type: array
      order:
        type: integer
      type:
        type: string
      value: {}
    type: object
  model.SmartServiceInstance:
    properties:
      description:
        type: string
      design_id:
        type: string
      error:
        description: is set if module-worker notifies the repository about a error
        type: string
      id:
        type: string
      name:
        type: string
      parameters:
        items:
          $ref: '#/definitions/model.SmartServiceParameter'
        type: array
      ready:
        type: boolean
      release_id:
        type: string
      user_id:
        type: string
    type: object
  model.SmartServiceInstanceInfo:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  model.SmartServiceInstanceInit:
    properties:
      description:
        type: string
      name:
        type: string
      parameters:
        items:
          $ref: '#/definitions/model.SmartServiceParameter'
        type: array
    type: object
  model.SmartServiceModule:
    properties:
      delete_info:
        $ref: '#/definitions/model.ModuleDeleteInfo'
      design_id:
        type: string
      id:
        type: string
      instance_id:
        type: string
      module_data:
        additionalProperties: true
        type: object
      module_type:
        description: '"process-deployment" | "analytics" ...'
        type: string
      release_id:
        type: string
      user_id:
        type: string
    type: object
  model.SmartServiceModuleInit:
    properties:
      delete_info:
        $ref: '#/definitions/model.ModuleDeleteInfo'
      module_data:
        additionalProperties: true
        type: object
      module_type:
        description: '"process-deployment" | "analytics" ...'
        type: string
    type: object
  model.SmartServiceParameter:
    properties:
      id:
        type: string
      value: {}
    type: object
  model.SmartServiceRelease:
    properties:
      created_at:
        description: unix timestamp, set by service on creation
        type: integer
      description:
        type: string
      design_id:
        type: string
      error:
        description: is set if errors occurred while releasing
        type: string
      id:
        type: string
      name:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Smart-Service-Repository API
  version: "0.1"
paths:
  /:
    get:
      description: checks health and reachability of the service
      responses:
        "200":
          description: ""
      summary: health check
      tags:
      - health
  /designs:
    get:
      description: returns a list of smart-service designs
      parameters:
      - description: limits size of result; 0 means unlimited
        in: query
        name: limit
        type: integer
      - description: offset to be used in combination with limit
        in: query
        name: offset
        type: integer
      - description: describes the sorting in the form of name.asc
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.SmartServiceDesign'
            type: array
        "401":
          description: ""
        "500":
          description: ""
      summary: returns a list of smart-service designs
      tags:
      - designs
    post:
      consumes:
      - application/json
      description: creates a smart-service designs
      parameters:
      - description: Design ID
        in: path
        name: id
        required: true
        type: string
      - description: SmartServiceDesign
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/model.SmartServiceDesign'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SmartServiceDesign'
        "401":
          description: ""
        "500":
          description: ""
      summary: creates a smart-service designs
      tags:
      - designs
  /designs/{id}:
    delete:
      description: removes a smart-service designs
      parameters:
      - description: Design ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: ""
        "401":
          description: ""
        "500":
          description: ""
      summary: removes a smart-service designs
      tags:
      - designs
    get:
      description: returns a smart-service designs
      parameters:
      - description: Design ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SmartServiceDesign'
        "401":
          description: ""
        "500":
          description: ""
      summary: returns a smart-service designs
      tags:
      - designs
    put:
      consumes:
      - application/json
      description: updates a smart-service designs
      parameters:
      - description: Design ID
        in: path
        name: id
        required: true
        type: string
      - description: SmartServiceDesign
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/model.SmartServiceDesign'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SmartServiceDesign'
        "400":
          description: ""
        "401":
          description: ""
        "500":
          description: ""
      summary: updates a smart-service designs
      tags:
      - designs
  /health:
    get:
      description: checks health and reachability of the service
      responses:
        "200":
          description: ""
      summary: health check
      tags:
      - health
  /instances:
    get:
      description: returns a list of smart-service instances
      parameters:
      - description: limits size of result; 0 means unlimited
        in: query
        name: limit
        type: integer
      - description: offset to be used in combination with limit
        in: query
        name: offset
        type: integer
      - description: describes the sorting in the form of name.asc
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.SmartServiceInstance'
            type: array
        "401":
          description: ""
        "500":
          description: ""
      summary: returns a list of smart-service instances
      tags:
      - instances
  /instances-by-process-id/{id}/error:
    put:
      consumes:
      - application/json
      description: sets smart-service instance error
      parameters:
      - description: Process-Instance ID
        in: path
        name: id
        required: true
        type: string
      - description: error message (json encoded)
        in: body
        name: message
        required: true
        schema:
          type: string
      responses:
        "200":
          description: ""
        "401":
          description: ""
        "500":
          description: ""
      summary: sets smart-service instance error
      tags:
      - instances
      - process-id
      - error
  /instances-by-process-id/{id}/modules:
    post:
      consumes:
      - application/json
      description: creates a smart-service module
      parameters:
      - description: Process-Instance ID
        in: path
        name: id
        required: true
        type: string
      - description: SmartServiceModuleInit
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/model.SmartServiceModuleInit'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SmartServiceModule'
        "400":
          description: ""
        "401":
          description: ""
        "500":
          description: ""
      summary: create a smart-service module
      tags:
      - modules
  /instances-by-process-id/{id}/user-id:
    get:
      description: get smart-service instance user-id
      parameters:
      - description: Process-Instance ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "401":
          description: ""
        "500":
          description: ""
      summary: get smart-service instance user-id
      tags:
      - instances
      - process-id
      - user-id
  /instances/{id}:
    delete:
      description: removes a smart-service instance with all modules
      parameters:
      - description: Instance ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: ""
        "401":
          description: ""
        "500":
          description: ""
      summary: removes a smart-service instance with all modules
      tags:
      - instances
    get:
      description: returns a smart-service instance
      parameters:
      - description: Instance ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SmartServiceInstance'
        "401":
          description: ""
        "500":
          description: ""
      summary: returns a smart-service instance
      tags:
      - instances
  /instances/{id}/error:
    put:
      consumes:
      - application/json
      description: sets smart-service instance error
      parameters:
      - description: Instance ID
        in: path
        name: id
        required: true
        type: string
      - description: error message (json encoded)
        in: body
        name: message
        required: true
        schema:
          type: string
      responses:
        "200":
          description: ""
        "401":
          description: ""
        "500":
          description: ""
      summary: sets smart-service instance error
      tags:
      - instances
      - error
  /instances/{id}/info:
    put:
      consumes:
      - application/json
      description: updates smart-service instance parameter
      parameters:
      - description: Instance ID
        in: path
        name: id
        required: true
        type: string
      - description: SmartServiceParameter
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/model.SmartServiceInstanceInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SmartServiceInstance'
        "401":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: updates smart-service instance parameter
      tags:
      - instances
      - parameter
  /instances/{id}/modules:
    post:
      consumes:
      - application/json
      description: creates a smart-service module
      parameters:
      - description: Instance ID
        in: path
        name: id
        required: true
        type: string
      - description: SmartServiceModuleInit
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/model.SmartServiceModuleInit'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SmartServiceModule'
        "400":
          description: ""
        "401":
          description: ""
        "500":
          description: ""
      summary: create a smart-service module
      tags:
      - modules
  /instances/{id}/parameters:
    put:
      consumes:
      - application/json
      description: updates smart-service instance parameter
      parameters:
      - description: Instance ID
        in: path
        name: id
        required: true
        type: string
      - description: SmartServiceParameter
        in: body
        name: message
        required: true
        schema:
          items:
            $ref: '#/definitions/model.SmartServiceParameter'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SmartServiceInstance'
        "401":
          description: ""
        "500":
          description: ""
      summary: updates smart-service instance parameter
      tags:
      - instances
      - parameter
  /modules:
    get:
      description: returns a list of smart-service models
      parameters:
      - description: filter by module type
        in: query
        name: module_type
        type: string
      - description: filter by instance id
        in: query
        name: instance_id
        type: string
      - description: limits size of result; 0 means unlimited
        in: query
        name: limit
        type: integer
      - description: offset to be used in combination with limit
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.SmartServiceModule'
            type: array
        "401":
          description: ""
        "500":
          description: ""
      summary: returns a list of smart-service models
      tags:
      - modules
  /releases:
    get:
      description: returns a list of smart-service releases
      parameters:
      - description: limits size of result
        in: query
        name: limit
        type: integer
      - description: offset to be used in combination with limit
        in: query
        name: offset
        type: integer
      - description: describes the sorting in the form of name.asc
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.SmartServiceRelease'
            type: array
        "401":
          description: ""
        "500":
          description: ""
      summary: returns a list of smart-service releases
      tags:
      - releases
    post:
      consumes:
      - application/json
      description: creates a smart-service release
      parameters:
      - description: Release ID
        in: path
        name: id
        required: true
        type: string
      - description: SmartServiceRelease
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/model.SmartServiceRelease'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SmartServiceRelease'
        "401":
          description: ""
        "500":
          description: ""
      summary: create a smart-service release
      tags:
      - releases
  /releases/{id}:
    delete:
      consumes:
      - application/json
      description: removes a smart-service release
      parameters:
      - description: Release ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "401":
          description: ""
        "403":
          description: ""
        "500":
          description: ""
      summary: removes a smart-service release
      tags:
      - releases
    get:
      description: returns a smart-service release
      parameters:
      - description: Release ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SmartServiceRelease'
        "401":
          description: ""
        "500":
          description: ""
      summary: returns a smart-service release
      tags:
      - releases
  /releases/{id}/instances:
    post:
      consumes:
      - application/json
      description: creates a smart-service instance from the release
      parameters:
      - description: Release ID
        in: path
        name: id
        required: true
        type: string
      - description: SmartServiceInstanceInit
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/model.SmartServiceInstanceInit'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SmartServiceInstance'
        "401":
          description: ""
        "500":
          description: ""
      summary: creates a smart-service instance from the release
      tags:
      - releases
      - instances
  /releases/{id}/parameters:
    get:
      description: returns parameters of a release
      parameters:
      - description: Release ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.SmartServiceExtendedParameter'
            type: array
        "401":
          description: ""
        "500":
          description: ""
      summary: returns parameters of a release
      tags:
      - releases
      - parameter
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
